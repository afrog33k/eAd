@model dynamic

@{
    ViewBag.Title = "Resize";
    Layout = null;
}
<link href="@Url.Content("~/Content/jquery.Jcrop.css")" rel="stylesheet" type="text/css" />
<style>
    #SizeCalc {  position: absolute;  left: -5000px; }
</style>
       <script src="@Url.Content("~/Scripts/jquery.Jcrop.min.js")" type="text/javascript"></script>
      <script type="text/javascript">
        var x = 0, y = 0, w = 0, h = 0;
         // Create variables (in this scope) to hold the API and image size
      var jcrop_api, boundx, boundy;
        var imageHandler = "ImageHandler.ashx?id=";

        $(function () {

                                    $('#imgUploadedImage').Jcrop({
                                        onChange: setCoords,
                                        onSelect: setCoords,
                                        aspectRatio: @(ViewBag.Width  / (float)ViewBag.Height),
                                        maxSize: [ @ViewBag.Width, @ViewBag.Height]
                                      },function(){
        // Use the API to get the real image size
        var bounds = this.getBounds();
        boundx = bounds[0];
        boundy = bounds[1];
        // Store the API in the jcrop_api variable
        jcrop_api = this;
      });
//            $("#preview").resizable();

                                    });
          
     

        function setCoords(c) {
            window.x = c.x;
             window.y = c.y;
             window.w = c.w;
            window.h = c.h;
            

            if (parseInt(c.w) > 0)
        {
          var rx = @ViewBag.Width / c.w;
          var ry = @ViewBag.Height / c.h;
//                var ex =;
//                var ey =;
           var offset=     $('#imgUploadedImage').offset();
          
          $('#preview').css({
            width: Math.round(rx * boundx) + 'px',
            height: Math.round(ry * boundy) + 'px',
            marginLeft: '-' + Math.round( (c.x+offset.left)) + 'px',//-$('#imgUploadedImage').scrollLeft()
            marginTop: '-' + Math.round( (c.y+offset.top)) + 'px'//-$('#imgUploadedImage').scrollTop()
          });
        }

        };

        function cropImage() {
           var image= $('#imgUploadedImage');
            // Copy the image, and insert it in an offscreen DIV
var aimgcopy = image.clone();
$('#SizeCalc').append(aimgcopy);

// Remove the height and width attributes
aimgcopy.removeAttr('height');
aimgcopy.removeAttr('width');

// Now the image copy has its "original" height and width
//alert('Height: '+aimgcopy.height()+' Width: '+aimgcopy.width());

            var x2 = (x * aimgcopy.width() ) / image.width();
            var y2 = ((y  *aimgcopy.height()))/ image.height();
            
              var wx = (w * aimgcopy.width()) / image.width();
          var hy = (h* aimgcopy.height())  / image.height();

           var top=     $('#imgUploadedImage').offset().top;

            $.ajax({
                url: "@Url.Action("CropImage", "Media" )",
                type: "POST",
                data: { x: Math.round(x2), y: Math.round(y2), w: Math.round(wx), h: Math.round(hy), url: $('#imgUploadedImage').attr('src')  },
                success: function (data) {
                  //  $('#lblMethodError').hide();
                  //  $("#pnlNewImage").show();
                   // $("#imgNewImage").attr("src", data);
               //  window.parent.parent.LoadComplete(data);
                 $('#ResizeImage').dialog('destroy');
            $('#ResizeImage').remove();
            window.plist[0].img = data;
            window.parent.CloseMediaPicker( window.plist, componentId.val());
                },
                error: function (xhr, status, error) {
                    // Show the error
                    $('#lblMethodError').text(xhr.responseText);
                    $('#lblMethodError').show();
                }
            });

        }
        
        function cancel() {
                 $('#ResizeImage').dialog('destroy');
            $('#ResizeImage').remove();
              window.parent.CloseMediaPicker( window.plist, componentId.val());
        }

        function resizeImage() {
            // Call the server side function to resize the image
            $.ajax({
                url: "@Url.Action("ResizeImage", "Media")",
                type: "POST",
                success: function (data) {
                    $('#lblMethodError').hide();
                    $("#pnlNewImage").show();
                    $("#imgNewImage").attr("src",  data);
                },
                error: function (xhr, status, error) {
                    // Show the error
                    $('#lblMethodError').text(xhr.responseText);
                    $('#lblMethodError').show();
                }
            });
        }
    </script>
    
    
      <table>
      <tr>
          <td>  <h2>Original Image</h2>
            <div id="pnlUploadedImage" >
            <img src="@ViewBag.Image" id="imgUploadedImage" alt="Uploaded Image" width="600px"/>
            </div>
          </td>
          </tr>
          <tr>
              <td>  <h2>Preview Image</h2>
                  <div style="width:@(ViewBag.Width)px;height:@(ViewBag.Height)px;overflow:hidden;">
                    <div id="pnlNewImage" >
                        <img src="@ViewBag.Image" id="preview" alt="Preview" class="jcrop-preview" />
                        </div>
                  </div>
                  </td>
          </tr>
     
    </table>
<input type="button" id="btnCrop" onclick="javascript:cropImage();" value="Crop Image" />
 <input type="button" id="btnCrop" onclick="javascript:cancel();" value="Cancel" />
       @*     <input type="button" id="btnResize" onclick="javascript:resizeImage();" value="Resize Image" />*@
            <label id="lblMethodError" style="display:none"></label>



<div id="SizeCalc"></div>