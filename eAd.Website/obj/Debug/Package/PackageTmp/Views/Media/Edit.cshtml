@using eAd.Utilities
@model eAd.DataAccess.Medium

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>     <img src="@( !(String.IsNullOrEmpty(Model.ThumbnailUrl)) ? /*Path.GetDirectoryName(item.DisplayLocation) QuickHacktm*/ Url.Content("~/Uploads/Temp/Media" + "/" + "Thumb" + Path.GetFileNameWithoutExtension(Model.Location) + ".jpg") : "/Content/Images/no_image.gif")"  alt="[@(MimeExtensionHelper.GetSimpleType(Model.Location))]" width="96" height="72"/>
                      </legend>

        @Html.HiddenFor(model => model.MediaID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        
        <div class="editor-label">
            Advertiser's Url
            @Html.LabelFor(model => model.Url)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Url)
            @Html.ValidationMessageFor(model => model.Url)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Location)
      
        </div>
        <div class="editor-label">
              @Html.LabelFor(model =>  model.Duration) 
          </div>
        <div class="editor-field">
           @Html.EditorFor(model =>  model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Tags)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tags)
            @Html.ValidationMessageFor(model => model.Tags)
        </div>

          <div class="editor-label">
            @Html.LabelFor(model => model.Hash)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Hash)
     
        </div>

              <div class="editor-label">
            @Html.LabelFor(model => model.Size)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Size)
         
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Type)
          
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
